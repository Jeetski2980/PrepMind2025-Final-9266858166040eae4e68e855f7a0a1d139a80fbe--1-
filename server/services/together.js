// server/services/together.js
import Together from "together-ai";
import { GoogleGenerativeAI } from "@google/generative-ai";

function requireEnv(name) {
  const v = process.env[name];
  if (!v) throw new Error(`${name} is not set`);
  return v;
}

// Secrets come from Render/GCP env or local .env
const together = new Together({ apiKey: requireEnv("TOGETHER_API_KEY") });
const genAI = new GoogleGenerativeAI(requireEnv("GEMINI_API_KEY"));
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

function dedupeExact(questions) {
  const seen = new Set();
  const out = [];
  for (const q of questions) {
    const key = (q.question || "").toLowerCase().trim();
    if (seen.has(key)) continue;
    seen.add(key);
    out.push(q);
  }
  return out;
}

/* =========================
   Google AI Question Generation
========================= */
export async function generateQuestions(testType, subject, topic, numQuestions) {
  const topicText = topic ? ` focusing on ${topic}` : "";
  try {
    const prompt = `Generate exactly ${numQuestions} unique multiple-choice questions for ${testType} ${subject}${topicText}.

CRITICAL REQUIREMENTS:
- Each question must be completely different in concept, formula, scenario, and approach
- NO repeated examples, equations, or similar problem types
- Questions appropriate for ${testType} ${subject} level
- Exactly 4 answer choices each
- Provide correct_answer as index 0-3 (zero-based)
- Each explanation must be exactly 3-5 complete sentences
- Mix difficulties: Easy, Medium, Hard
- For math: use simple notation like x^2, (a/b), sqrt(x)
${testType === "AP Exams" ? `- Generate college-level ${subject} questions with advanced concepts` : ""}
${topic ? `- Focus specifically on ${topic} concepts and problems` : ""}

Return ONLY valid JSON in this exact format:
{
  "questions": [
    {
      "question": "Question text here",
      "choices": ["Choice A", "Choice B", "Choice C", "Choice D"],
      "correct_answer": 0,
      "explanation": "Detailed explanation in 3-5 sentences.",
      "difficulty": "Medium"
    }
  ]
}`;

    const result = await model.generateContent(prompt);
    const content = result.response.text().trim();

    // Clean JSON if fenced or chatty
    let jsonText = content.replace(/```json\n?|\n?```/g, "");
    if (!jsonText.startsWith("{")) {
      const s = jsonText.indexOf("{");
      const e = jsonText.lastIndexOf("}");
      if (s !== -1 && e !== -1) jsonText = jsonText.slice(s, e + 1);
    }

    const parsed = JSON.parse(jsonText);
    const questions = Array.isArray(parsed?.questions) ? parsed.questions : [];
    if (questions.length === 0) throw new Error("No questions generated by Google AI");

    const formatted = questions.map((q) => ({
      question: q.question || "",
      choices: Array.isArray(q.choices) ? q.choices.slice(0, 4) : ["A", "B", "C", "D"],
      correct_answer:
        typeof q.correct_answer === "number"
          ? Math.min(3, Math.max(0, q.correct_answer))
          : 0,
      explanation: q.explanation || "Explanation not available",
      difficulty: q.difficulty || "Medium",
    }));

    const unique = dedupeExact(formatted)
      .slice(0, numQuestions)
      .map((q, i) => ({ id: i + 1, ...q }));

    return unique;
  } catch (error) {
    console.error("AI question generation failed:", error);
    throw new Error(`AI question generation failed: ${error.message}. Please try again.`);
  }
}

/* =========================
   Together AI Chat
========================= */
export async function generateChatResponse(message) {
  const prompt = `You are an expert tutor for SAT, ACT, and AP test prep.

Student question: "${message}"

Provide a helpful response with:
- **bold** for final answers and key formulas
- $inline$ and $$display$$ math
- Use multiple <highlight>...</highlight> tags for steps and concepts
- 2â€“3 paragraphs total.`;

  try {
    const completion = await together.chat.completions.create({
      model: "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
      messages: [
        { role: "system", content: "You are PrepMind's AI tutor. Give clear, step-by-step explanations with math formatting." },
        { role: "user", content: prompt },
      ],
      temperature: 0.7,
      max_tokens: 1000,
      stream: false,
    });

    return (
      completion.choices[0]?.message?.content?.trim() ||
      "Sorry, I'm having trouble responding. Please try again."
    );
  } catch (error) {
    console.error("Chat response failed:", error);
    return "I'm experiencing technical difficulties. Please try again in a moment.";
  }
}
